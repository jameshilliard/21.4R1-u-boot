/* 
 * This file defines the message ring configuration for phoenix-8. It tries to allow 
 * many different point-point communications between the message stations on the message ring
 * and as result is _not_ the best configuration for performance
 *
 * The message ring on phoenix family of processors connects the cpus, gmacs, xgmac/spi4,
 * security engine and the general purpose DMA engines. It provides a high bandwidth,
 * low latency communication links. On traditional processors, this communication goes through
 * which inherently does not scale very well with increasing number of cpus. 
 * 
 * Message ring has an in-built flow control mechanism. Every agent/station on the ring has to
 * have software configured credits to send messages to any agent. Every receiving agent on the
 * ring has a 256 entry FIFO that can divided into "buckets". All addressing on the ring is 
 * in terms of buckets. There are a total 128 buckets on the ring. The total number of credits 
 * across all sending agents should not exceed the bucket size. 
 *
 * Below are the receiving agents and the max number of buckets they can have
 * 	CPU 0	: 8 buckets
 * 	CPU 1	: 8 buckets
 * 
 *	GMAC0	: 8 buckets	
 *      GMAC1	: 8 buckets
 *	
 *	SEC	: 8 buckets
 * 
 *	DMA	: 8 buckets
 *
 * The bucket size of a bucket should be aligned to the bucket's starting index in that
 * receiving station's FIFO. For example, if sizes of bucket0 and bucket1 of a station 
 * are 32 and 32, bucket2's size has to be 64. bucket size 0 is valid.
 *
 * The format of the file is pretty straight forward. Each bucket definition has the size
 * and the list of sending agents to that bucket with the number of credits to send.
 * 
 * Undefined buckets have a size of 0 and Tx stations have 0 credits to send to that bucket.
 *
 *  Following are the currently supported bucket names
 *  cpu_0_0
 *  cpu_0_1
 *  cpu_0_2
 *  cpu_0_3
 *  cpu_0_4
 *  cpu_0_5
 *  cpu_0_6
 *  cpu_0_7
 *  
 *  cpu_1_0
 *  cpu_1_1
 *  cpu_1_2
 *  cpu_1_3
 *  cpu_1_4
 *  cpu_1_5
 *  cpu_1_6
 *  cpu_1_7
 *
 *  gmac0_rfr
 *  gmac0_tx_0
 *  gmac0_tx_1
 *  gmac0_tx_2
 *  gmac0_tx_3
 *
 *  gmac1_rfr
 *  gmac1_tx_0
 *  gmac1_tx_1
 *  gmac1_tx_2
 *  gmac1_tx_3
 *  sec_pipe_0
 *  sec_rsa
 *
 * Following are the currently supported Tx Agent/Station names
 *
 *  tx_stn_cpu_0
 *  tx_stn_cpu_1
 *
 *  tx_stn_gmac0
 *  tx_stn_gmac1
 *
 *  tx_stn_dma
 *
 *  tx_stn_sec
 *
 *
 * 
 */

/*************************************************************/
// CPU_0 Message Station 

bucket "cpu_0_0" { 
	size 32;
	"tx_stn_cpu_0" 4;
	"tx_stn_gmac0" 8;
        "tx_stn_gmac1" 8;
}
bucket "cpu_0_1" { 
	size 32; 
	"tx_stn_cpu_0" 4;
        "tx_stn_gmac0" 8;
        "tx_stn_gmac1" 8;
}
bucket "cpu_0_2" { 
	size 32; 
	"tx_stn_cpu_0" 4;
        "tx_stn_gmac0" 8;
        "tx_stn_gmac1" 8;
}
bucket "cpu_0_3" { 
	size 32; 
	"tx_stn_cpu_0" 4;
        "tx_stn_gmac0" 8;
        "tx_stn_gmac1" 8;
}
bucket "cpu_0_4" { 
	size 32; 
	"tx_stn_cpu_0" 4;
        "tx_stn_gmac0" 8;
        "tx_stn_gmac1" 8;
}
bucket "cpu_0_5" { 
	size 32; 
	"tx_stn_cpu_0" 4;
        "tx_stn_gmac0" 8;
        "tx_stn_gmac1" 8;
}
bucket "cpu_0_6" { 
	size 32; 
	"tx_stn_cpu_0" 4;
        "tx_stn_gmac0" 8;
        "tx_stn_gmac1" 8;
}
bucket "cpu_0_7" { 
	size 32; 
	"tx_stn_cpu_0" 4;
        "tx_stn_gmac0" 8;
        "tx_stn_gmac1" 8;
}

/*************************************************************/
// CPU_1 Message Station 

bucket "cpu_1_0" {
	size 32;
	"tx_stn_cpu_0" 4;
}

bucket "cpu_1_1" {
	size 32;
	"tx_stn_cpu_0" 4;
}

bucket "cpu_1_2" {
	size 32;
	"tx_stn_cpu_0" 4;
}

bucket "cpu_1_3" {
	size 32;
	"tx_stn_cpu_0" 4;
}

bucket "cpu_1_4" {
	size 32;
	"tx_stn_cpu_0" 4;
}

bucket "cpu_1_5" {
	size 32;
	"tx_stn_cpu_0" 4;
}

bucket "cpu_1_6" {
	size 32;
	"tx_stn_cpu_0" 4;
}

bucket "cpu_1_7" {
	size 32;
	"tx_stn_cpu_0" 4;
}
/*************************************************************/
// CPU_2 Message Station 

bucket "cpu_2_0" {
	size 64;
	"tx_stn_cpu_0" 4;
}

bucket "cpu_2_1" {
	size 64;
	"tx_stn_cpu_0" 4;
}

bucket "cpu_2_2" {
	size 64;
	"tx_stn_cpu_0" 4;
}

bucket "cpu_2_3" {
	size 64;
	"tx_stn_cpu_0" 4;
}

/*************************************************************/
// CPU_3 Message Station 

bucket "cpu_3_0" {
	size 64;
	"tx_stn_cpu_0" 4;
}

bucket "cpu_3_1" {
	size 64;
	"tx_stn_cpu_0" 4;
}

bucket "cpu_3_2" {
	size 64;
	"tx_stn_cpu_0" 4;
}

bucket "cpu_3_3" {
	size 64;
	"tx_stn_cpu_0" 4;
}
/*************************************************************/
// GMAC Message Station 

bucket "gmac0_rfr_0" {
	size 32;
	"tx_stn_gmac0"  16;
	"tx_stn_cpu_0" 2;
	"tx_stn_cpu_1" 2;
}

bucket "gmac0_tx_0" {
	size 32;
	"tx_stn_cpu_0" 4;
	"tx_stn_cpu_1" 4;
}

bucket "gmac0_tx_1" {
	size 32;
	"tx_stn_cpu_0" 4;
	"tx_stn_cpu_1" 4;
}

bucket "gmac0_tx_2" {
	size 32;
	"tx_stn_cpu_0" 4;
	"tx_stn_cpu_1" 4;
}

bucket "gmac0_tx_3" {
	size 32;
	"tx_stn_cpu_0" 4;
	"tx_stn_cpu_1" 4;
}

bucket "gmac0_rfr_1" {
        size 32;
        "tx_stn_gmac1"  16;
        "tx_stn_cpu_0" 2;
        "tx_stn_cpu_1" 2;
}

bucket "gmac1_rfr_0" {
        size 32;
        "tx_stn_gmac1"  16;
        "tx_stn_cpu_0" 2;
        "tx_stn_cpu_1" 2;
}

bucket "gmac1_tx_0" {
        size 32;
        "tx_stn_cpu_0" 4;
        "tx_stn_cpu_1" 4;
}

bucket "gmac1_tx_1" {
        size 32;
        "tx_stn_cpu_0" 4;
        "tx_stn_cpu_1" 4;
}

bucket "gmac1_tx_2" {
        size 32;
        "tx_stn_cpu_0" 4;
        "tx_stn_cpu_1" 4;
}

bucket "gmac1_tx_3" {
        size 32;
        "tx_stn_cpu_0" 4;
        "tx_stn_cpu_1" 4;
}

bucket "gmac1_rfr_1" {
        size 32;
        "tx_stn_gmac1"  16;
        "tx_stn_cpu_0" 2;
        "tx_stn_cpu_1" 2;
}
